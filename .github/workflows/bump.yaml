---

name: 'Bump'


on:
  workflow_dispatch:
    inputs:
      CZ_BUMP_TYPE:
        default: MINOR
        required: false
        description: "Type of bump to conduct"
  # push:
  #   branches:
  #     - '**'
  #   tags:
  #     - '*'



jobs:

  bump:
    name: 'Bump Version'
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Get Next Version
        id: get_next_version
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: development
          noVersionBumpBehavior: warn
          noNewCommitBehavior: warn

      # - name: Get next version
      #   id: get_next_version
      #   uses: thenativeweb/get-next-version@main
      #   with:
      #     prefix: 'v' # optional, defaults to ''


      - name: Show the next version
        if: success() || failure()
        run: |
          echo ${{ steps.get_next_version.outputs.current }};
          echo ${{ steps.get_next_version.outputs.next }};
          echo ${{ steps.get_next_version.outputs.nextMajor }};
          echo ${{ steps.get_next_version.outputs.nextStrict }};
          echo ${{ steps.get_next_version.outputs.nextMajorStrict }};
          echo ${{ steps.get_next_version.outputs.bump }};



      - name: Install Commitizen
        shell: bash
        run: |
          pip install \
            commitizen==3.14.1


      - name: Install Commitizen
        shell: bash
        run: |
          pip install \
            commitizen==3.14.1

      # - name: Configure git
      #   shell: bash
      #   run: |
      #     git config --global user.email "helpdesk@nofusscomputing.com";
      #     git config --global user.name "nfc_bot";



      # - name: Create Release Changelog
      #   shell: bash
      #   run: |
      #     cz changelog  --incremental --dry-run --unreleased-version 



      - name: ls
        if: ${{ github.ref_name != 'master' }}
        shell: bash
        run: |
          ls -la


      - name: Update Changelog
        # if: ${{ github.ref_name != 'master' }}
        shell: bash
        run: |
          cz changelog --dry-run --incremental --unreleased-version "${{ steps.get_next_version.outputs.nextStrict }}" > changelog-release.md


      - name: Update Changelog
        if: ${{ github.ref_name != 'master' }}
        shell: bash
        run: |
          cz changelog --unreleased-version "${{ steps.get_next_version.outputs.nextStrict }}"



      # - name: Update Changelog - (Master Branch)
      #   if: ${{ github.ref_name == 'master' }}
      #   shell: bash
      #   run: |
      #     cz changelog --merge-prerelease --unreleased-version ${{ steps.get_next_version.outputs.nextStrict }}"
      #     cz changelog --dry-run --incremental --unreleased-version "${{ steps.get_next_version.outputs.nextStrict }}" > changelog-release.md



      # - name: Update Changelog - (Master Branch)
      #   # if: ${{ github.ref_name == 'master' }}
      #   shell: bash
      #   run: |
      #     cz changelog --dry-run --incremental --unreleased-version "${{ steps.get_next_version.outputs.nextStrict }}" > changelog-release.md



      - name: Incremennt version with .cz.yaml
        shell: bash
        run: |
          cz bump \
            --files-only \
            --yes

      # - name: Install Commitizen
      #   shell: bash
      #   run: |
          



      # - name: Install Commitizen
      #   shell: bash
      #   run: |
          



      # - name: Get previous tag
      #   if: ${{ steps.get_next_version.outputs.hasNextVersion }}
      #   id: previousTag
      #   run: |
      #     name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
      #     echo "previousTag: $name"
      #     echo "previousTag=$name" >> $GITHUB_ENV


      # - name: Create Temp git tag
      #   if: ${{ steps.get_next_version.outputs.nextStrict }}
      #   # id: previousTag
      #   run: |
      #     git tag ${{ steps.get_next_version.outputs.nextStrict }};


      # - name: Update CHANGELOG
      #   if: ${{ steps.get_next_version.outputs.nextStrict }}
      #   id: changelog
      #   uses: requarks/changelog-action@v1
      #   with:
      #     token: ${{ github.token }}
      #     # tag: ${{ steps.get_next_version.outputs.current }}
      #     # tag: ${{ github.ref_name }}
      #     # fromTag: ${{ github.ref_name }}
      #     fromTag: ${{ steps.get_next_version.outputs.nextStrict }}
      #     toTag: ${{ steps.get_next_version.outputs.current }}
      #     writeToFile: true
      #     changelogFilePath: CHANGELOG.md
      #     includeRefIssues: true
      #     includeInvalidCommits: false
      #     reverseOrder: false

      # - name: Create Temp git tag
      #   if: ${{ steps.get_next_version.outputs.nextStrict }}
      #   # id: previousTag
      #   run: |
      #     git tag -d ${{ steps.get_next_version.outputs.nextStrict }};



      # - name: Conventional Changelog Action
      #   id: changelog
      #   uses: TriPSs/conventional-changelog-action@v5
      #   with:
      #     github-token: ${{ secrets.github_token }}
      #     # git-message: 'chore(release): {version}'
      #     # git-user-name: 'Awesome Changelog Action'
      #     # git-user-email: 'awesome_changelog@github.actions.com'
      #     preset: 'conventionalcommits'
      #     tag-prefix: ''
      #     input-file: CHANGELOG.md
      #     output-file: 'CHANGELOG.md'
      #     # release-count: '10000'
      #     pre-changelog-generation: ''    # pre changelog script file
      #     # version-file: './my_custom_version_file.json' // or .yml, .yaml, .toml, mix.exs
      #     # version-path: 'path.to.version'
      #     skip-on-empty: true
      #     skip-version-file: true
      #     skip-commit: true
      #     git-branch: ${{ github.ref_name }}
      #     skip-bump: true
      #     git-push: true
      #     skip-tag: true
      #     skip-git-pull: true



      # - name: Create Release Changelog
      #   if: ${{ steps.get_next_version.outputs.nextStrict }}
      #   shell: bash
      #   run: |
      #     echo '${{ steps.changelog.outputs.clean_changelog }}' > changelog-release.md


      - name: Upload Release Changelog
        if: ${{ steps.get_next_version.outputs.nextStrict }}
        uses: actions/upload-artifact@v4
        with:
          name: changelog-release
          path: changelog-release.md


      - name: Create Release Changelog
        if: ${{ steps.get_next_version.outputs.nextStrict }}
        shell: bash
        run: |
          rm changelog-release.md;
          git status;


      - name: Commit the changelog
        if: ${{ steps.get_next_version.outputs.nextStrict }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # Optional. Commit message for the created commit.
          # Defaults to "Apply automatic changes"
          commit_message: 'chore: bump version'

          # Optional. Local and remote branch name where commit is going to be pushed
          #  to. Defaults to the current branch.
          #  You might need to set `create_branch: true` if the branch does not exist.
          branch: development

          # Optional. Options used by `git-commit`.
          # See https://git-scm.com/docs/git-commit#_options
          # commit_options: '--no-verify --signoff'

          # Optional glob pattern of files which should be added to the commit
          # Defaults to all (.)
          # See the `pathspec`-documentation for git
          # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
          # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
          # file_pattern: '.'

          # Optional. Local file path to the repository.
          # Defaults to the root of the repository.
          # repository: .

          # Optional commit user and author settings
          commit_user_name: nfc-bot # defaults to "github-actions[bot]"
          commit_user_email: helpdesk@nofusscomputing.com # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
          commit_author: nfc-bot <helpdesk@nofusscomputing.com> # defaults to "username <username@users.noreply.github.com>", where "username" belongs to the author of the commit that triggered the run

          # Optional. Tag name being created in the local repository and 
          # pushed to remote repository and defined branch.
          tagging_message: ${{ steps.get_next_version.outputs.nextStrict }}

          # Optional. Option used by `git-status` to determine if the repository is 
          # dirty. See https://git-scm.com/docs/git-status#_options
          # status_options: '--untracked-files=no'

          # Optional. Options used by `git-add`.
          # See https://git-scm.com/docs/git-add#_options
          # add_options: '-u'

          # Optional. Options used by `git-push`.
          # See https://git-scm.com/docs/git-push#_options
          # push_options: '--force'
          
          # Optional. Disable dirty check and always try to create a commit and push
          skip_dirty_check: true    
          
          # Optional. Skip internal call to `git fetch`
          skip_fetch: true    
          
          # Optional. Skip internal call to `git checkout`
          skip_checkout: true

          # Optional. Prevents the shell from expanding filenames. 
          # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
          disable_globbing: true

          # Optional. Create given branch name in local and remote repository.
          # create_branch: true
